{
  "contractName": "RegistryMock",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "record",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "remove",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "REGISTRY_TYPE",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_receiver",
          "type": "address"
        },
        {
          "name": "_attribute",
          "type": "bytes32"
        },
        {
          "name": "_value",
          "type": "bytes32"
        }
      ],
      "name": "update",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_status",
          "type": "bool"
        }
      ],
      "name": "updateOperator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isOperator",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        },
        {
          "name": "_attribute",
          "type": "bytes32"
        }
      ],
      "name": "hasAttribute",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "expose",
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]"
        },
        {
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_attribute",
          "type": "bytes32"
        }
      ],
      "name": "attributeExists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "attributes",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "VERIFICATION_TYPE",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_receiver",
          "type": "address"
        },
        {
          "name": "_attribute",
          "type": "bytes32"
        },
        {
          "name": "_value",
          "type": "bytes32"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "status",
          "type": "bool"
        },
        {
          "indexed": false,
          "name": "updatedAt",
          "type": "uint256"
        }
      ],
      "name": "OperatorStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "registry",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "attribute",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "updatedAt",
          "type": "uint256"
        }
      ],
      "name": "RecordUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "registry",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "updatedAt",
          "type": "uint256"
        }
      ],
      "name": "AddressRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_attribute",
          "type": "bytes32"
        }
      ],
      "name": "testAddAttribute",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260008054600160a060020a0319163390811790915561002d9060016401000000006100da810204565b610081307f72656769737472792e74797065000000000000000000000000000000000000007f706f7274616c0000000000000000000000000000000000000000000000000000640100000000610153810204565b6100d5307f766572696669636174696f6e2e747970650000000000000000000000000000007f4b59430000000000000000000000000000000000000000000000000000000000640100000000610153810204565b6102ad565b600054600160a060020a031633146100f157600080fd5b600160a060020a038216600081815260016020908152604091829020805460ff1916851515908117909155825142815292519093927f1490bf5846abf8a5f02ba05428324b614a1be3b07a78f2feb69e0f7841aea90592908290030190a35050565b61016533640100000000610213810204565b151561017057600080fd5b600160a060020a038316600090815260046020908152604080832085845290915290208190556101a882640100000000610231810204565b15156101c2576101c082640100000000610246810204565b505b604080518381526020810183905242818301529051600160a060020a0385169130917f49890ae13d6876dce3fbc8b113103a50c2056e3da74bc468a05aca685050d5589181900360600190a3505050565b600160a060020a031660009081526001602052604090205460ff1690565b60009081526003602052604090205460ff1690565b60008054600160a060020a0316331461025e57600080fd5b6002805460018181019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01839055600092835260036020526040909220805460ff191690921790915590565b610a4b806102bc6000396000f3006080604052600436106100e55763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663170c699981146100ea57806329092d0e1461012057806329b42859146101435780632f6968c01461016f57806364ff3004146101845780636d44a3b2146101ab5780636d70f7ae146101d1578063715018a6146101f25780637338c25c146102075780638da5cb5b1461022b5780639a6f250b1461025c578063c93ca9c514610316578063d05dcc6a1461032e578063d916d4e214610346578063db6d232f1461035b578063f2fde38b14610382575b600080fd5b3480156100f657600080fd5b5061010e600160a060020a03600435166024356103a3565b60408051918252519081900360200190f35b34801561012c57600080fd5b50610141600160a060020a03600435166103c0565b005b34801561014f57600080fd5b5061015b600435610475565b604080519115158252519081900360200190f35b34801561017b57600080fd5b5061010e610486565b34801561019057600080fd5b50610141600160a060020a03600435166024356044356104aa565b3480156101b757600080fd5b50610141600160a060020a0360043516602435151561054f565b3480156101dd57600080fd5b5061015b600160a060020a03600435166105c8565b3480156101fe57600080fd5b506101416105e6565b34801561021357600080fd5b5061015b600160a060020a0360043516602435610652565b34801561023757600080fd5b5061024061067c565b60408051600160a060020a039092168252519081900360200190f35b34801561026857600080fd5b5061027d600160a060020a036004351661068b565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156102c15781810151838201526020016102a9565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156103005781810151838201526020016102e8565b5050505090500194505050505060405180910390f35b34801561032257600080fd5b5061015b600435610897565b34801561033a57600080fd5b5061010e6004356108ac565b34801561035257600080fd5b5061010e6108cb565b34801561036757600080fd5b5061015b600160a060020a03600435166024356044356108ef565b34801561038e57600080fd5b50610141600160a060020a0360043516610918565b600460209081526000928352604080842090915290825290205481565b60006103cb336105c8565b15156103d657600080fd5b5060005b60025481101561043157600160a060020a0382166000908152600460205260408120600280549192918490811061040d57fe5b600091825260208083209091015483528201929092526040018120556001016103da565b604080514281529051600160a060020a0384169130917f53c6138b42c27e0b27ce424b65e1cee1f34e9b9b4e8f28817faf74867e4874389181900360200190a35050565b60006104808261093b565b92915050565b7f72656769737472792e747970650000000000000000000000000000000000000081565b6104b3336105c8565b15156104be57600080fd5b600160a060020a038316600090815260046020908152604080832085845290915290208190556104ed82610897565b15156104fe576104fc8261093b565b505b604080518381526020810183905242818301529051600160a060020a0385169130917f49890ae13d6876dce3fbc8b113103a50c2056e3da74bc468a05aca685050d5589181900360600190a3505050565b600054600160a060020a0316331461056657600080fd5b600160a060020a038216600081815260016020908152604091829020805460ff1916851515908117909155825142815292519093927f1490bf5846abf8a5f02ba05428324b614a1be3b07a78f2feb69e0f7841aea90592908290030190a35050565b600160a060020a031660009081526001602052604090205460ff1690565b600054600160a060020a031633146105fd57600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600160a060020a039190911660009081526004602090815260408083209383529290522054151590565b600054600160a060020a031681565b6060806000806060806000806060806002805490509750876040519080825280602002602001820160405280156106cc578160200160208202803883390190505b509550876040519080825280602002602001820160405280156106f9578160200160208202803883390190505b509450600092505b6002548310156107b557600160a060020a038b166000908152600460205260408120600280549192918690811061073457fe5b60009182526020808320909101548352820192909252604001902054965086156107aa57600280548490811061076657fe5b9060005260206000200154868581518110151561077f57fe5b602090810290910101528451879086908690811061079957fe5b602090810290910101526001909301925b600190920191610701565b836040519080825280602002602001820160405280156107df578160200160208202803883390190505b5091508360405190808252806020026020018201604052801561080c578160200160208202803883390190505b509050600092505b8383101561088757858381518110151561082a57fe5b90602001906020020151828481518110151561084257fe5b60209081029091010152845185908490811061085a57fe5b90602001906020020151818481518110151561087257fe5b60209081029091010152600190920191610814565b909a909950975050505050505050565b60009081526003602052604090205460ff1690565b60028054829081106108ba57fe5b600091825260209091200154905081565b7f766572696669636174696f6e2e7479706500000000000000000000000000000081565b600160a060020a0392909216600090815260046020908152604080832093835292905220541490565b600054600160a060020a0316331461092f57600080fd5b610938816109a2565b50565b60008054600160a060020a0316331461095357600080fd5b6002805460018181019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01839055600092835260036020526040909220805460ff191690921790915590565b600160a060020a03811615156109b757600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a723058206794e5e77fb0cab08e0985e50d10d858e1479a2eac691a309f0f4be3e2a75e9b0029",
  "deployedBytecode": "0x6080604052600436106100e55763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663170c699981146100ea57806329092d0e1461012057806329b42859146101435780632f6968c01461016f57806364ff3004146101845780636d44a3b2146101ab5780636d70f7ae146101d1578063715018a6146101f25780637338c25c146102075780638da5cb5b1461022b5780639a6f250b1461025c578063c93ca9c514610316578063d05dcc6a1461032e578063d916d4e214610346578063db6d232f1461035b578063f2fde38b14610382575b600080fd5b3480156100f657600080fd5b5061010e600160a060020a03600435166024356103a3565b60408051918252519081900360200190f35b34801561012c57600080fd5b50610141600160a060020a03600435166103c0565b005b34801561014f57600080fd5b5061015b600435610475565b604080519115158252519081900360200190f35b34801561017b57600080fd5b5061010e610486565b34801561019057600080fd5b50610141600160a060020a03600435166024356044356104aa565b3480156101b757600080fd5b50610141600160a060020a0360043516602435151561054f565b3480156101dd57600080fd5b5061015b600160a060020a03600435166105c8565b3480156101fe57600080fd5b506101416105e6565b34801561021357600080fd5b5061015b600160a060020a0360043516602435610652565b34801561023757600080fd5b5061024061067c565b60408051600160a060020a039092168252519081900360200190f35b34801561026857600080fd5b5061027d600160a060020a036004351661068b565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156102c15781810151838201526020016102a9565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156103005781810151838201526020016102e8565b5050505090500194505050505060405180910390f35b34801561032257600080fd5b5061015b600435610897565b34801561033a57600080fd5b5061010e6004356108ac565b34801561035257600080fd5b5061010e6108cb565b34801561036757600080fd5b5061015b600160a060020a03600435166024356044356108ef565b34801561038e57600080fd5b50610141600160a060020a0360043516610918565b600460209081526000928352604080842090915290825290205481565b60006103cb336105c8565b15156103d657600080fd5b5060005b60025481101561043157600160a060020a0382166000908152600460205260408120600280549192918490811061040d57fe5b600091825260208083209091015483528201929092526040018120556001016103da565b604080514281529051600160a060020a0384169130917f53c6138b42c27e0b27ce424b65e1cee1f34e9b9b4e8f28817faf74867e4874389181900360200190a35050565b60006104808261093b565b92915050565b7f72656769737472792e747970650000000000000000000000000000000000000081565b6104b3336105c8565b15156104be57600080fd5b600160a060020a038316600090815260046020908152604080832085845290915290208190556104ed82610897565b15156104fe576104fc8261093b565b505b604080518381526020810183905242818301529051600160a060020a0385169130917f49890ae13d6876dce3fbc8b113103a50c2056e3da74bc468a05aca685050d5589181900360600190a3505050565b600054600160a060020a0316331461056657600080fd5b600160a060020a038216600081815260016020908152604091829020805460ff1916851515908117909155825142815292519093927f1490bf5846abf8a5f02ba05428324b614a1be3b07a78f2feb69e0f7841aea90592908290030190a35050565b600160a060020a031660009081526001602052604090205460ff1690565b600054600160a060020a031633146105fd57600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600160a060020a039190911660009081526004602090815260408083209383529290522054151590565b600054600160a060020a031681565b6060806000806060806000806060806002805490509750876040519080825280602002602001820160405280156106cc578160200160208202803883390190505b509550876040519080825280602002602001820160405280156106f9578160200160208202803883390190505b509450600092505b6002548310156107b557600160a060020a038b166000908152600460205260408120600280549192918690811061073457fe5b60009182526020808320909101548352820192909252604001902054965086156107aa57600280548490811061076657fe5b9060005260206000200154868581518110151561077f57fe5b602090810290910101528451879086908690811061079957fe5b602090810290910101526001909301925b600190920191610701565b836040519080825280602002602001820160405280156107df578160200160208202803883390190505b5091508360405190808252806020026020018201604052801561080c578160200160208202803883390190505b509050600092505b8383101561088757858381518110151561082a57fe5b90602001906020020151828481518110151561084257fe5b60209081029091010152845185908490811061085a57fe5b90602001906020020151818481518110151561087257fe5b60209081029091010152600190920191610814565b909a909950975050505050505050565b60009081526003602052604090205460ff1690565b60028054829081106108ba57fe5b600091825260209091200154905081565b7f766572696669636174696f6e2e7479706500000000000000000000000000000081565b600160a060020a0392909216600090815260046020908152604080832093835292905220541490565b600054600160a060020a0316331461092f57600080fd5b610938816109a2565b50565b60008054600160a060020a0316331461095357600080fd5b6002805460018181019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01839055600092835260036020526040909220805460ff191690921790915590565b600160a060020a03811615156109b757600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a723058206794e5e77fb0cab08e0985e50d10d858e1479a2eac691a309f0f4be3e2a75e9b0029",
  "sourceMap": "55:158:13:-;;;567:5:17;:18;;-1:-1:-1;;;;;;567:18:17;575:10;567:18;;;;;;924:32:7;;567:18:17;924:14:7;;;;:32;:::i;:::-;962:37;969:4;975:13;962:37;:6;;;;:37;:::i;:::-;1005:38;1012:4;1018:17;1005:38;:6;;;;:38;:::i;:::-;55:158:13;;609:172:6;719:5:17;;-1:-1:-1;;;;;719:5:17;705:10;:19;697:28;;;;;;-1:-1:-1;;;;;689:20:6;;;;;;:9;:20;;;;;;;;;:30;;-1:-1:-1;;689:30:6;;;;;;;;;;730:46;;772:3;730:46;;;;689:30;;:20;730:46;;;;;;;;;609:172;;:::o;1185:275:7:-;747:22;758:10;747;;;;:22;:::i;:::-;739:31;;;;;;;;-1:-1:-1;;;;;1282:17:7;;;;;;:6;:17;;;;;;;;:29;;;;;;;;:38;;;1330:27;1300:10;1330:15;;;;:27;:::i;:::-;1329:28;1326:63;;;1365:24;1378:10;1365:12;;;;:24;:::i;:::-;;1326:63;1400:55;;;;;;;;;;;;1451:3;1400:55;;;;;;-1:-1:-1;;;;;1400:55:7;;;1414:4;;1400:55;;;;;;;;;1185:275;;;:::o;868:102:6:-;-1:-1:-1;;;;;946:19:6;927:4;946:19;;;:9;:19;;;;;;;;;868:102::o;728:110:0:-;793:4;811:21;;;:9;:21;;;;;;;;;728:110::o;903:145::-;972:4;719:5:17;;-1:-1:-1;;;;;719:5:17;705:10;:19;697:28;;;;;;983:10:0;27::-1;;39:1;23:18;;;45:23;;;983:27:0;;;;;-1:-1:-1;1015:21:0;;;:9;983:27;1015:21;;;;;:28;;-1:-1:-1;;1015:28:0;;;;;;;903:145;:::o;55:158:13:-;;;;;;;",
  "deployedSourceMap": "55:158:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;509:61:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;509:61:7;-1:-1:-1;;;;;509:61:7;;;;;;;;;;;;;;;;;;;;;;;1538:206;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1538:206:7;-1:-1:-1;;;;;1538:206:7;;;;;;;95:116:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;95:116:13;;;;;;;;;;;;;;;;;;;;;;;343:55:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;343:55:1;;;;1185:275:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1185:275:7;-1:-1:-1;;;;;1185:275:7;;;;;;;;;609:172:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;609:172:6;-1:-1:-1;;;;;609:172:6;;;;;;;;;868:102;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;868:102:6;-1:-1:-1;;;;;868:102:6;;;;;1001:111:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:17;;;;3143:139:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3143:139:7;-1:-1:-1;;;;;3143:139:7;;;;;;;238:20:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:17;;;;;;;;-1:-1:-1;;;;;238:20:17;;;;;;;;;;;;;;2089:994:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2089:994:7;-1:-1:-1;;;;;2089:994:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2089:994:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2089:994:7;;;;;;;;;;;;;;;;;;;728:110:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;728:110:0;;;;;504:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;504:27:0;;;;;456:63:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;456:63:1;;;;1859:155:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1859:155:7;-1:-1:-1;;;;;1859:155:7;;;;;;;;;1274:103:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:17;-1:-1:-1;;;;;1274:103:17;;;;;509:61:7;;;;;;;;;;;;;;;;;;;;;;;;:::o;1538:206::-;1603:9;747:22;758:10;747;:22::i;:::-;739:31;;;;;;;;-1:-1:-1;1615:1:7;1599:93;1622:10;:17;1618:21;;1599:93;;;-1:-1:-1;;;;;1660:17:7;;;;;;:6;:17;;;;;1678:10;:13;;1660:17;;;1689:1;;1678:13;;;;;;;;;;;;;;;;;;1660:32;;;;;;;;;;;;1653:39;1641:3;;1599:93;;;1703:36;;;1735:3;1703:36;;;;-1:-1:-1;;;;;1703:36:7;;;1718:4;;1703:36;;;;;;;;;1538:206;;:::o;95:116:13:-;156:4;179:24;192:10;179:12;:24::i;:::-;172:32;95:116;-1:-1:-1;;95:116:13:o;343:55:1:-;;;:::o;1185:275:7:-;747:22;758:10;747;:22::i;:::-;739:31;;;;;;;;-1:-1:-1;;;;;1282:17:7;;;;;;:6;:17;;;;;;;;:29;;;;;;;;:38;;;1330:27;1300:10;1330:15;:27::i;:::-;1329:28;1326:63;;;1365:24;1378:10;1365:12;:24::i;:::-;;1326:63;1400:55;;;;;;;;;;;;1451:3;1400:55;;;;;;-1:-1:-1;;;;;1400:55:7;;;1414:4;;1400:55;;;;;;;;;1185:275;;;:::o;609:172:6:-;719:5:17;;-1:-1:-1;;;;;719:5:17;705:10;:19;697:28;;;;;;-1:-1:-1;;;;;689:20:6;;;;;;:9;:20;;;;;;;;;:30;;-1:-1:-1;;689:30:6;;;;;;;;;;730:46;;772:3;730:46;;;;689:30;;:20;730:46;;;;;;;;;609:172;;:::o;868:102::-;-1:-1:-1;;;;;946:19:6;927:4;946:19;;;:9;:19;;;;;;;;;868:102::o;1001:111:17:-;719:5;;-1:-1:-1;;;;;719:5:17;705:10;:19;697:28;;;;;;1077:5;;;1058:25;;-1:-1:-1;;;;;1077:5:17;;;;1058:25;;;1105:1;1089:18;;-1:-1:-1;;1089:18:17;;;1001:111::o;3143:139:7:-;-1:-1:-1;;;;;3242:16:7;;;;3223:4;3242:16;;;:6;:16;;;;;;;;:28;;;;;;;;:34;;;3143:139::o;238:20:17:-;;;-1:-1:-1;;;;;238:20:17;;:::o;2089:994:7:-;2144:9;2155;2172:24;2222:20;2248:29;2317:31;2388:33;2432:9;2749:27;2825:29;2199:10;:17;;;;2172:44;;2294:16;2280:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;2280:31:7;;2248:63;;2365:16;2351:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;2351:31:7;;2317:65;;2444:1;2432:13;;2428:315;2451:10;:17;2447:21;;2428:315;;;-1:-1:-1;;;;;2498:17:7;;;;;;:6;:17;;;;;2516:10;:13;;2498:17;;;2527:1;;2516:13;;;;;;;;;;;;;;;;;;2498:32;;;;;;;;;;;;;;-1:-1:-1;2541:17:7;;2538:199;;2612:10;:13;;2623:1;;2612:13;;;;;;;;;;;;;;2570:12;2583:25;2570:39;;;;;;;;;;;;;;;;;;:55;2635:41;;2679:12;;2635:14;;2650:25;;2635:41;;;;;;;;;;;;;;:56;2701:27;;;;;2538:199;2470:3;;;;;2428:315;;;2793:25;2779:40;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;2779:40:7;;2749:70;;2871:25;2857:40;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;2857:40:7;;2825:72;;2912:1;2908:5;;2904:137;2919:25;2915:1;:29;2904:137;;;2976:12;2989:1;2976:15;;;;;;;;;;;;;;;;;;2960:10;2971:1;2960:13;;;;;;;;;;;;;;;;;;:31;3017:17;;:14;;3032:1;;3017:17;;;;;;;;;;;;;;2999:12;3012:1;2999:15;;;;;;;;;;;;;;;;;;:35;2946:3;;;;;2904:137;;;3053:10;;3065:12;;-1:-1:-1;2089:994:7;-1:-1:-1;;;;;;;;2089:994:7:o;728:110:0:-;793:4;811:21;;;:9;:21;;;;;;;;;728:110::o;504:27::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;504:27:0;:::o;456:63:1:-;;;:::o;1859:155:7:-;-1:-1:-1;;;;;1969:17:7;;;;1950:4;1969:17;;;:6;:17;;;;;;;;:29;;;;;;;;:39;;1859:155::o;1274:103:17:-;719:5;;-1:-1:-1;;;;;719:5:17;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;903:145:0:-;972:4;719:5:17;;-1:-1:-1;;;;;719:5:17;705:10;:19;697:28;;;;;;983:10:0;27::-1;;39:1;23:18;;;45:23;;;983:27:0;;;;;-1:-1:-1;1015:21:0;;;:9;983:27;1015:21;;;;;:28;;-1:-1:-1;;1015:28:0;;;;;;;903:145;:::o;1512:171:17:-;-1:-1:-1;;;;;1582:23:17;;;;1574:32;;;;;;1638:5;;;1617:38;;-1:-1:-1;;;;;1617:38:17;;;;1638:5;;;1617:38;;;1661:5;:17;;-1:-1:-1;;1661:17:17;-1:-1:-1;;;;;1661:17:17;;;;;;;;;;1512:171::o",
  "source": "pragma solidity ^0.4.24;\n\nimport './../Registry.sol';\n\ncontract RegistryMock is Registry {\n    function testAddAttribute(bytes32 _attribute) public returns(bool) {\n        return(addAttribute(_attribute));\n    }\n}\n",
  "sourcePath": "/Users/pengliu/work/bankorus_sto/VerifiedToken-master/contracts/mocks/RegistryMock.sol",
  "ast": {
    "absolutePath": "/Users/pengliu/work/bankorus_sto/VerifiedToken-master/contracts/mocks/RegistryMock.sol",
    "exportedSymbols": {
      "RegistryMock": [
        1785
      ]
    },
    "id": 1786,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1768,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:13"
      },
      {
        "absolutePath": "/Users/pengliu/work/bankorus_sto/VerifiedToken-master/contracts/Registry.sol",
        "file": "./../Registry.sol",
        "id": 1769,
        "nodeType": "ImportDirective",
        "scope": 1786,
        "sourceUnit": 1444,
        "src": "26:27:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1770,
              "name": "Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1443,
              "src": "80:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registry_$1443",
                "typeString": "contract Registry"
              }
            },
            "id": 1771,
            "nodeType": "InheritanceSpecifier",
            "src": "80:8:13"
          }
        ],
        "contractDependencies": [
          47,
          56,
          1132,
          1443,
          1728,
          2054
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1785,
        "linearizedBaseContracts": [
          1785,
          1443,
          56,
          47,
          1132,
          2054,
          1728
        ],
        "name": "RegistryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1783,
              "nodeType": "Block",
              "src": "162:49:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1779,
                            "name": "_attribute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1773,
                            "src": "192:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 1778,
                          "name": "addAttribute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "179:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) returns (bool)"
                          }
                        },
                        "id": 1780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "179:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1781,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "178:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1777,
                  "id": 1782,
                  "nodeType": "Return",
                  "src": "172:32:13"
                }
              ]
            },
            "documentation": null,
            "id": 1784,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "testAddAttribute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1773,
                  "name": "_attribute",
                  "nodeType": "VariableDeclaration",
                  "scope": 1784,
                  "src": "121:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1772,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "121:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "120:20:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 1777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1776,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1784,
                  "src": "156:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1775,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "156:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "155:6:13"
            },
            "scope": 1785,
            "src": "95:116:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1786,
        "src": "55:158:13"
      }
    ],
    "src": "0:214:13"
  },
  "legacyAST": {
    "absolutePath": "/Users/pengliu/work/bankorus_sto/VerifiedToken-master/contracts/mocks/RegistryMock.sol",
    "exportedSymbols": {
      "RegistryMock": [
        1785
      ]
    },
    "id": 1786,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1768,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:13"
      },
      {
        "absolutePath": "/Users/pengliu/work/bankorus_sto/VerifiedToken-master/contracts/Registry.sol",
        "file": "./../Registry.sol",
        "id": 1769,
        "nodeType": "ImportDirective",
        "scope": 1786,
        "sourceUnit": 1444,
        "src": "26:27:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1770,
              "name": "Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1443,
              "src": "80:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registry_$1443",
                "typeString": "contract Registry"
              }
            },
            "id": 1771,
            "nodeType": "InheritanceSpecifier",
            "src": "80:8:13"
          }
        ],
        "contractDependencies": [
          47,
          56,
          1132,
          1443,
          1728,
          2054
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1785,
        "linearizedBaseContracts": [
          1785,
          1443,
          56,
          47,
          1132,
          2054,
          1728
        ],
        "name": "RegistryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1783,
              "nodeType": "Block",
              "src": "162:49:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1779,
                            "name": "_attribute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1773,
                            "src": "192:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 1778,
                          "name": "addAttribute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "179:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) returns (bool)"
                          }
                        },
                        "id": 1780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "179:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1781,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "178:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1777,
                  "id": 1782,
                  "nodeType": "Return",
                  "src": "172:32:13"
                }
              ]
            },
            "documentation": null,
            "id": 1784,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "testAddAttribute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1773,
                  "name": "_attribute",
                  "nodeType": "VariableDeclaration",
                  "scope": 1784,
                  "src": "121:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1772,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "121:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "120:20:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 1777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1776,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1784,
                  "src": "156:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1775,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "156:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "155:6:13"
            },
            "scope": 1785,
            "src": "95:116:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1786,
        "src": "55:158:13"
      }
    ],
    "src": "0:214:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-01-08T06:37:39.683Z",
  "devdoc": {
    "methods": {
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}